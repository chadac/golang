# golang list should succeed to load a package ending with ".golang" if the path does
# not correspond to an existing local file. Listing a pattern ending with
# ".golang/" should try to list a package regardless of whether a file exists at the
# path without the suffixed "/" or not.
golang list example.com/dotgolang.golang
stdout ^example.com/dotgolang.golang$
golang list example.com/dotgolang.golang/
stdout ^example.com/dotgolang.golang$

# golang get should succeed in either case, with or without a version.
# Arguments are interpreted as packages or package patterns with versions,
# not source files.
golang get example.com/dotgolang.golang
golang get example.com/dotgolang.golang/
golang get example.com/dotgolang.golang@v1.0.0
golang get example.com/dotgolang.golang/@v1.0.0

-- golang.mod --
module m

golang 1.13

require example.com/dotgolang.golang v1.0.0
-- golang.sum --
example.com/dotgolang.golang v1.0.0 h1:XKJfs0V8x2PvY2tX8bJBCEbCDLnt15ma2onwhVpew/I=
example.com/dotgolang.golang v1.0.0/golang.mod h1:Qi6z/X3AC5vHiuMt6HF2ICx3KhIBGrMdrA7YoPDKqR0=
-- use.golang --
package use

import _ "example.com/dotgolang.golang"
