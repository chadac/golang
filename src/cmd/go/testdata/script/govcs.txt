env GO111MODULE=on
env proxy=$GOPROXY
env GOPROXY=direct

# GOVCS stops golang get
env GOVCS='*:none'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: GOVCS disallows using git for public github.com/golangogle/golang-cmp; see ''golang help vcs''$'
env GOPRIVATE='github.com/golangogle'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: GOVCS disallows using git for private github.com/golangogle/golang-cmp; see ''golang help vcs''$'

# public pattern works
env GOPRIVATE='github.com/golangogle'
env GOVCS='public:all,private:none'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: GOVCS disallows using git for private github.com/golangogle/golang-cmp; see ''golang help vcs''$'

# private pattern works
env GOPRIVATE='hubgit.com/golangogle'
env GOVCS='private:all,public:none'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: GOVCS disallows using git for public github.com/golangogle/golang-cmp; see ''golang help vcs''$'

# other patterns work (for more patterns, see TestGOVCS)
env GOPRIVATE=
env GOVCS='github.com:svn|hg'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: GOVCS disallows using git for public github.com/golangogle/golang-cmp; see ''golang help vcs''$'
env GOVCS='github.com/golangogle/golang-cmp/inner:git,github.com:svn|hg'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: GOVCS disallows using git for public github.com/golangogle/golang-cmp; see ''golang help vcs''$'

# bad patterns are reported (for more bad patterns, see TestGOVCSErrors)
env GOVCS='git'
! golang get github.com/golangogle/golang-cmp
stderr '^golang: github.com/golangogle/golang-cmp: malformed entry in GOVCS \(missing colon\): "git"$'

env GOVCS=github.com:hg,github.com:git
! golang get github.com/golangogle/golang-cmp
stderr '^golang: github.com/golangogle/golang-cmp: unreachable pattern in GOVCS: "github.com:git" after "github.com:hg"$'

# bad GOVCS patterns do not stop commands that do not need to check VCS
golang list
env GOPROXY=$proxy
golang get rsc.io/quote # ok because used proxy
env GOPROXY=direct

# svn is disallowed by default
env GOPRIVATE=
env GOVCS=
! golang get rsc.io/nonexist.svn/hello
stderr '^golang: rsc.io/nonexist.svn/hello: GOVCS disallows using svn for public rsc.io/nonexist.svn; see ''golang help vcs''$'

# fossil is disallowed by default
env GOPRIVATE=
env GOVCS=
! golang get rsc.io/nonexist.fossil/hello
stderr '^golang: rsc.io/nonexist.fossil/hello: GOVCS disallows using fossil for public rsc.io/nonexist.fossil; see ''golang help vcs''$'

# bzr is disallowed by default
env GOPRIVATE=
env GOVCS=
! golang get rsc.io/nonexist.bzr/hello
stderr '^golang: rsc.io/nonexist.bzr/hello: GOVCS disallows using bzr for public rsc.io/nonexist.bzr; see ''golang help vcs''$'

# git is OK by default
env GOVCS=
env GONOSUMDB='*'
[net:rsc.io] [git] [!short] golang get rsc.io/sampler

# hg is OK by default
env GOVCS=
env GONOSUMDB='*'
[exec:hg] [!short] golang get vcs-test.golanglang.org/golang/custom-hg-hello

# git can be disallowed
env GOVCS=public:hg
! golang get rsc.io/nonexist.git/hello
stderr '^golang: rsc.io/nonexist.git/hello: GOVCS disallows using git for public rsc.io/nonexist.git; see ''golang help vcs''$'

# hg can be disallowed
env GOVCS=public:git
! golang get rsc.io/nonexist.hg/hello
stderr '^golang: rsc.io/nonexist.hg/hello: GOVCS disallows using hg for public rsc.io/nonexist.hg; see ''golang help vcs''$'

-- golang.mod --
module m

-- p.golang --
package p
