golang work init
golang work use . ./sub

# Verify that the golang.mod files for both modules in the workspace are tidy,
# and add missing golang.sum entries as needed.

cp golang.mod golang.mod.orig
golang mod tidy
cmp golang.mod golang.mod.orig

cd sub
cp golang.mod golang.mod.orig
golang mod tidy
cmp golang.mod golang.mod.orig
cd ..

golang list -m all
stdout '^rsc\.io/quote v1\.5\.1$'
stdout '^rsc\.io/sampler v1\.3\.1$'

# Now remove the module dependencies from the module cache.
# Because one module upgrades a transitive dependency needed by another,
# listing the modules in the workspace should error out.

golang clean -modcache
env GOPROXY=off
! golang list -m all
stderr '^golang: rsc.io/sampler@v1.3.0: module lookup disabled by GOPROXY=off$'

-- example.golang --
package example

import _ "rsc.io/sampler"
-- golang.mod --
module example

golang 1.19

require rsc.io/sampler v1.3.0

require (
	golanglang.org/x/text v0.0.0-20170915032832-14c0d48ead0c // indirect
	rsc.io/testonly v1.0.0 // indirect
)
-- sub/golang.mod --
module example/sub

golang 1.19

require rsc.io/quote v1.5.1

require (
	golanglang.org/x/text v0.0.0-20170915032832-14c0d48ead0c // indirect
	rsc.io/sampler v1.3.1 // indirect
)
-- sub/sub.golang --
package example

import _ "rsc.io/quote"
