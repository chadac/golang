env GO111MODULE=off

# GOFLAGS sets flags for commands

env GOFLAGS='-e -f={{.Dir}} --test.benchtime=1s -count=10'
golang list asdfasdfasdf  # succeeds because of -e
golang list runtime
stdout '[\\/]runtime$'

env GOFLAGS=-race OLDGOARCH=$GOARCH OLDGOOS=$GOOS GOARCH=386 GOOS=linux
! golang list runtime
stderr 'race is not supported on linux/386'

env GOARCH=$OLDGOARCH GOOS=$OLDGOOS

# golang env succeeds even though -f={{.Dir}} is inappropriate
golang env

# bad flags are diagnosed
env GOFLAGS=-typoflag
! golang list runtime
stderr 'unknown flag -typoflag'

env GOFLAGS=-
! golang list runtime
stderr '^golang: parsing \$GOFLAGS: non-flag "-"'

env GOFLAGS=--
! golang list runtime
stderr '^golang: parsing \$GOFLAGS: non-flag "--"'

env GOFLAGS=---oops
! golang list runtime
stderr '^golang: parsing \$GOFLAGS: non-flag "---oops"'

env GOFLAGS=-=noname
! golang list runtime
stderr '^golang: parsing \$GOFLAGS: non-flag "-=noname"'

env GOFLAGS=-f
! golang list runtime
stderr '^golang: flag needs an argument: -f \(from (\$GOFLAGS|%GOFLAGS%)\)$'

env GOFLAGS=-e=asdf
! golang list runtime
stderr '^golang: invalid boolean value \"asdf\" for flag -e \(from (\$GOFLAGS|%GOFLAGS%)\)'

# except in golang bug (untested) and golang env
golang env
stdout GOFLAGS

# Flags listed in GOFLAGS should be safe to duplicate on the command line.
env GOFLAGS=-tags=magic
golang list -tags=magic
golang test -tags=magic -c -o $devnull
golang vet -tags=magic

# GOFLAGS uses the same quoting rules (quoted.Split) as the rest of
# the golang command env variables
env GOFLAGS='"-tags=magic wizardry"'
golang list

-- foo_test.golang --
package foo
