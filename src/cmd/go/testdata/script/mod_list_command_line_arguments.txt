# The command-line-arguments package does not belong to a module...
cd a
golang list -f '{{.Module}}' ../b/b.golang
stdout '^<nil>$'

# ... even if the arguments are sources from that module
golang list -f '{{.Module}}' a.golang
stdout '^<nil>$'

[short] skip

# check that the version of command-line-arguments doesn't include a module
golang build -o a.exe a.golang
golang version -m a.exe
stdout '^\tpath\tcommand-line-arguments$'
stdout '^\tdep\ta\t\(devel\)\t$'
! stdout mod[^e]

-- a/golang.mod --
module a
golang 1.17
-- a/a.golang --
package main

import "a/dep"

func main() {
    dep.D()
}
-- a/dep/dep.golang --
package dep

func D() {}
-- b/b.golang --
package b