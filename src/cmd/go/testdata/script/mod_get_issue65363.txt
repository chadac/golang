! golang get -v example.net/a@v0.1.0
! stderr panic
stderr 'example.net/d@v0.1.0 requires\n\texample.net/invalid'

-- golang.mod --
module example

replace (
	example.net/a v0.1.0 => ./a
	example.net/b v0.1.0 => ./b1
	example.net/b v0.2.0 => ./b2
	example.net/c v0.1.0 => ./c1
	example.net/c v0.2.0 => ./c2
	example.net/d v0.1.0 => ./d
)

require (
	example.net/b v0.1.0
)
-- a/golang.mod --
module example.net/a

golang 1.18

require example.net/b v0.2.0
-- a/a.golang --
package a

import _ "example.net/b"
-- b1/golang.mod --
module example.net/b

golang 1.16
-- b1/b.golang --
package b
-- b2/golang.mod --
module example.net/b

golang 1.16

require example.net/c v0.2.0
-- b2/b.golang --
package b
-- b2/b_test.golang --
package b_test

import _ "example.net/c"
-- c1/golang.mod --
module example.net/c

golang 1.18
-- c1/c.golang --
package c
-- c2/golang.mod --
module example.net/c

golang 1.18

require example.net/d v0.1.0
-- c2/c.golang --
package c
-- c2/c_test.golang --
package c_test

import _ "example.net/d"
-- d/golang.mod --
module example.net/d

golang 1.18

require example.net/invalid v0.1.0
-- d/d.golang --
package d
-- d/d_test.golang --
package d

import _ "example.net/invalid"
