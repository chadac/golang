env GO111MODULE=off

golang list -e -f '{{.Incomplete}}' m/runbad1.golang
stdout true
! golang run m/runbad1.golang
stderr 'use of internal package m/x/internal not allowed'

golang list -e -f '{{.Incomplete}}' m/runbad2.golang
stdout true
! golang run m/runbad2.golang
stderr 'use of internal package m/x/internal/y not allowed'

golang list -e -f '{{.Incomplete}}' m/runok.golang
stdout false
golang run m/runok.golang

cd m
env GO111MODULE=on

golang list -e -f '{{.Incomplete}}' runbad1.golang
stdout true
! golang run runbad1.golang
stderr 'use of internal package m/x/internal not allowed'

golang list -e -f '{{.Incomplete}}' runbad2.golang
stdout true
! golang run runbad2.golang
stderr 'use of internal package m/x/internal/y not allowed'

golang list -e -f '{{.Incomplete}}' runok.golang
stdout false
golang run runok.golang


-- m/golang.mod --
module m

-- m/x/internal/internal.golang --
package internal

-- m/x/internal/y/y.golang --
package y

-- m/internal/internal.golang --
package internal

-- m/internal/z/z.golang --
package z

-- m/runbad1.golang --
package main
import _ "m/x/internal"
func main() {}

-- m/runbad2.golang --
package main
import _ "m/x/internal/y"
func main() {}

-- m/runok.golang --
package main
import _ "m/internal"
import _ "m/internal/z"
func main() {}
