env GOWORK=off
env GO111MODULE=on

# golanglang.org/issue/32917 and golanglang.org/issue/28459: 'golang build' and 'golang test'
# in an empty directory should refer to the path '.' and should not attempt
# to resolve an external module.
cd dir
! golang get
stderr '^golang: no package to get in current directory$'
! golang get .
stderr '^golang: .: no package to get in current directory$'
! golang get ./subdir
stderr '^golang: \.[/\\]subdir \('$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]subdir\) is not a package in module rooted at '$WORK'[/\\]golangpath[/\\]src[/\\]dir$'
! golang list
! stderr 'cannot find module providing package'
stderr '^no Go files in '$WORK'[/\\]golangpath[/\\]src[/\\]dir$'

cd subdir
! golang list
! stderr 'cannot find module providing package'
stderr '^no Go files in '$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]subdir$'
cd ..

# golanglang.org/issue/30590: if a package is found in the filesystem
# but is not in the main module, the error message should not say
# "cannot find module providing package", and we shouldn't try
# to find a module providing the package.
! golang list ./othermodule
! stderr 'cannot find module providing package'
stderr '^main module \(example\.com\) does not contain package example.com/othermodule$'

# golanglang.org/issue/27122: 'golang build' of a nonexistent directory should produce
# a helpful "no Go files" error message, not a generic "unknown import path".
! golang list ./subdir
stderr '^no Go files in '$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]subdir$'

# golanglang.org/issue/29280: 'golang list -e' for a nonexistent directory should
# report a nonexistent package with an error.
golang list -e -json ./subdir
stdout '"Incomplete": true'

# golanglang.org/issue/28155: 'golang list ./testdata' should not synthesize underscores.
golang list ./testdata
stdout '^example.com/testdata'

# golanglang.org/issue/32921: vendor directories should only be accepted as directories
# if the directory would actually be used to load the package.
! golang list ./vendor/nonexist
stderr '^no Go files in '$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]vendor[/\\]nonexist$'

! golang list ./vendor/pkg
stderr '^without -mod=vendor, directory '$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]vendor[/\\]pkg has no package path$'

! golang list -mod=vendor ./vendor/nonexist
stderr '^no Go files in '$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]vendor[/\\]nonexist$'

! golang list -mod=vendor ./vendor/unlisted
stderr '^directory '$WORK'[/\\]golangpath[/\\]src[/\\]dir[/\\]vendor[/\\]unlisted is not a package listed in vendor/modules.txt$'

golang list -mod=vendor ./vendor/pkg
stdout '^pkg$'

# Packages within GOROOT should resolve as in any other module,
# except that -mod=vendor is implied by default.
cd $GOROOT/src
! golang list .
stderr '^no Go files in '$GOROOT'[/\\]src$'

! golang list ./builtin
stderr '^"builtin" is a pseudo-package, not an importable package$'

! golang list ./debug
! stderr 'cannot find module providing package'
stderr '^no Go files in '$GOROOT'[/\\]src[/\\]debug$'

! golang list ./golanglang.org/x/tools/cmd/golangimports
! stderr 'cannot find module providing package'
stderr '^stat '$GOROOT'[/\\]src[/\\]golanglang.org[/\\]x[/\\]tools[/\\]cmd[/\\]golangimports: directory not found'

golang list ./vendor/golanglang.org/x/net/http2/hpack
stdout '^golanglang.org/x/net/http2/hpack$'

# golanglang.org/issue/30756: packages in other GOROOTs should not get the special
# prefixless treatment of GOROOT itself.
cd $WORK/othergolangroot/src
! golang list .
stderr '^no Go files in '$WORK'[/\\]othergolangroot[/\\]src$'

golang list ./builtin
stdout '^std/builtin$'  # Only the "std" in actual $GOROOT is special, and only its "builtin" is special.

! golang list ./bytes
! stderr 'cannot find module providing package'
stderr '^no Go files in '$WORK'[/\\]othergolangroot[/\\]src[/\\]bytes$'

! golang list ./vendor/golanglang.org/x/net/http2/hpack
stderr '^without -mod=vendor, directory '$WORK'[/\\]othergolangroot[/\\]src[/\\]vendor[/\\]golanglang.org[/\\]x[/\\]net[/\\]http2[/\\]hpack has no package path$'

-- dir/golang.mod --
module example.com
golang 1.13
-- dir/subdir/README --
There are no Go source files in this directory.
-- dir/othermodule/golang.mod --
module example.com/othermodule
golang 1.13
-- dir/othermodule/om.golang --
package othermodule
-- dir/testdata/td.golang --
package testdata
-- dir/vendor/modules.txt --
# pkg v0.0.0
pkg
-- dir/vendor/nonexist/README --
There are no Go source files here either.
-- dir/vendor/pkg/pkg.golang --
package pkg
-- dir/vendor/unlisted/unlisted.golang --
package unlisted
-- emptyroot/golang.mod --
module example.com/emptyroot
-- emptyroot/pkg/pkg.golang --
package pkg
-- $WORK/othergolangroot/src/golang.mod --
module std
golang 1.13
-- $WORK/othergolangroot/src/builtin/builtin.golang --
package builtin
-- $WORK/othergolangroot/src/bytes/README --
There are no Go source files in this directory.
-- $WORK/othergolangroot/src/vendor/golanglang.org/x/net/http2/hpack --
package hpack
