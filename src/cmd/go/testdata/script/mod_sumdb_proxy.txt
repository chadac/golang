env GO111MODULE=on
env sumdb=$GOSUMDB
env proxy=$GOPROXY
env GOPROXY GONOPROXY GOSUMDB GONOSUMDB

# basic fetch (through proxy) works
cp golang.mod.orig golang.mod
golang get rsc.io/fortune@v1.0.0 # note: must use test proxy, does not exist in real world
rm $GOPATH/pkg/mod/cache/download/sumdb # rm sumdb cache but NOT package download cache
rm golang.sum

# can fetch by explicit URL
cp golang.mod.orig golang.mod
env GOSUMDB=$sumdb' '$proxy/sumdb-direct
golang get rsc.io/fortune@v1.0.0
rm $GOPATH/pkg/mod/cache/download/sumdb
rm golang.sum

# direct access fails (because localhost.localdev does not exist)
# web.get is providing the error message - there's no actual network access.
cp golang.mod.orig golang.mod
env GOSUMDB=$sumdb
env GOPROXY=direct
! golang get rsc.io/fortune@v1.0.0
stderr 'verifying module: rsc.io/fortune@v1.0.0: .*: no such host localhost.localdev'
rm $GOPATH/pkg/mod/cache/download/sumdb
rm golang.sum

# proxy 404 falls back to direct access (which fails)
cp golang.mod.orig golang.mod
env GOSUMDB=$sumdb
env GOPROXY=$proxy/sumdb-404
! golang get rsc.io/fortune@v1.0.0
stderr 'verifying.*localhost.localdev'
rm $GOPATH/pkg/mod/cache/download/sumdb
rm golang.sum

# proxy non-200/404/410 stops direct access
cp golang.mod.orig golang.mod
env GOSUMDB=$sumdb
env GOPROXY=$proxy/sumdb-503
! golang get rsc.io/fortune@v1.0.0
stderr '503 Service Unavailable'
rm $GOPATH/pkg/mod/cache/download/sumdb
rm golang.sum

# the error from the last attempted proxy should be returned.
cp golang.mod.orig golang.mod
env GOSUMDB=$sumdb
env GOPROXY=$proxy/sumdb-404,$proxy/sumdb-503
! golang get rsc.io/fortune@v1.0.0
stderr '503 Service Unavailable'
rm $GOPATH/pkg/mod/cache/download/sumdb
rm golang.sum

# if proxies are separated with '|', fallback is allowed on any error.
cp golang.mod.orig golang.mod
env GOSUMDB=$sumdb
env GOPROXY=$proxy/sumdb-503|https://0.0.0.0|$proxy
golang get rsc.io/fortune@v1.0.0
rm $GOPATH/pkg/mod/cache/download/sumdb
rm golang.sum

-- golang.mod.orig --
module m
