[short] skip
env GO111MODULE=on

# Set up fresh GOCACHE.
env GOCACHE=$WORK/golangcache
mkdir $GOCACHE

cd $WORK
golang build -o a.out

# Varying -trimpath should cause a rebuild.
golang build -x -o a.out -trimpath
stderr '(compile|gccgolang)( |\.exe)'
stderr 'link( |\.exe)'

# Two distinct versions of the same module with identical content should
# still be cached separately.
# Verifies golanglang.org/issue/35412.
golang get example.com/stack@v1.0.0
golang run -trimpath printstack.golang
stdout '^example.com/stack@v1.0.0/stack.golang$'
golang get example.com/stack@v1.0.1
golang run -trimpath printstack.golang
stdout '^example.com/stack@v1.0.1/stack.golang$'

-- $WORK/hello.golang --
package main
func main() { println("hello") }

-- $WORK/printstack.golang --
// +build ignore

package main

import (
	"fmt"

	"example.com/stack"
)

func main() {
	fmt.Println(stack.TopFile())
}
-- $WORK/golang.mod --
module m

golang 1.14
