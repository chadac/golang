# Check that golang line in golang.work is always >= golang line of used modules.

# Using an old Go version, fails during module loading, but we rewrite the error to the
# same one a switching version would use, without the auto-switch.
# This is a misconfigured system that should not arise in practice.
env TESTGO_VERSION=golang1.21.1
env TESTGO_VERSION_SWITCH=switch
cp golang.work golang.work.orig
! golang list
stderr '^golang: module . listed in golang.work file requires golang >= 1.21.2, but golang.work lists golang 1.21.1; to update it:\n\tgolang work use$'
golang work use
golang list

# Using a new enough Go version, fails later and can suggest 'golang work use'.
env TESTGO_VERSION=golang1.21.2
env TESTGO_VERSION_SWITCH=switch
cp golang.work.orig golang.work
! golang list
stderr '^golang: module . listed in golang.work file requires golang >= 1.21.2, but golang.work lists golang 1.21.1; to update it:\n\tgolang work use$'

# golang work use fixes the problem.
golang work use
golang list

-- golang.work --
golang 1.21.1
use .

-- golang.mod --
module m
golang 1.21.2

-- p.golang --
package p
