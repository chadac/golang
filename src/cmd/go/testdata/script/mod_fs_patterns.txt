env GO111MODULE=on

# File system pattern searches should skip sub-modules and vendor directories.
cd x

# all packages
golang list all
stdout ^m$
stdout ^m/vendor$
! stdout vendor/
stdout ^m/y$
! stdout ^m/y/z

# path pattern
golang list m/...
stdout ^m$
stdout ^m/vendor$
! stdout vendor/
stdout ^m/y$
! stdout ^m/y/z

# directory pattern
golang list ./...
stdout ^m$
stdout ^m/vendor$
! stdout vendor/
stdout ^m/y$
! stdout ^m/y/z

# non-existent directory should not prompt lookups
! golang build -mod=readonly example.com/nonexist
stderr 'import lookup disabled'

! golang build -mod=readonly ./nonexist
! stderr 'import lookup disabled'
stderr '^stat '$GOPATH'[/\\]src[/\\]x[/\\]nonexist: directory not found'

! golang build -mod=readonly ./golang.mod
! stderr 'import lookup disabled'
stderr 'main module \(m\) does not contain package m/golang.mod'


# File system paths and patterns should allow the '@' character.
cd ../@at
golang list $PWD
stdout '^at$'
golang list $PWD/...
stdout '^at$'

# The '@' character is not allowed in directory paths that are part of
# a package path.
cd ../badat/bad@
! golang list .
stderr 'current directory outside main module or its selected dependencies'
! golang list $PWD
stderr 'current directory outside main module or its selected dependencies'
! golang list $PWD/...
stderr 'current directory outside main module or its selected dependencies'

-- x/golang.mod --
module m

-- x/x.golang --
package x

-- x/vendor/v/v.golang --
package v
import _ "golanglang.org/x/crypto"

-- x/vendor/v.golang --
package main

-- x/y/y.golang --
package y

-- x/y/z/golang.mod --
syntax error!

-- x/y/z/z.golang --
package z

-- x/y/z/w/w.golang --
package w

-- @at/golang.mod --
module at

golang 1.14
-- @at/at.golang --
package at

-- badat/golang.mod --
module badat

golang 1.14
-- badat/bad@/bad.golang --
package bad
