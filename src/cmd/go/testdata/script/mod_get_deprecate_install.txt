[short] skip

env GO111MODULE=on

# 'golang get' outside a module prints an error.
! golang get example.com/cmd/a
stderr '^golang: golang.mod file not found in current directory or any parent directory.$'
stderr '^\t''golang get'' is no longer supported outside a module.$'

cp golang.mod.orig golang.mod

# 'golang get' inside a module with a non-main package does not print a message.
# This will stop building in the future, but it's the command we want to use.
golang get rsc.io/quote
! stderr deprecated
! stderr 'no longer installs'
cp golang.mod.orig golang.mod

# 'golang get' inside a module with an executable does not print a message.
# In 1.16 and 1.17, 'golang get' did print a message in this case suggesting the
# use of -d. In 1.18, -d is a no-op, and we'd like to begin discouraging
# its use.
golang get example.com/cmd/a
! stderr deprecated
! stderr 'no longer installs'
cp golang.mod.orig golang.mod

# 'golang get' should not print a warning for a main package inside the main module.
# The intent is most likely to update the dependencies of that package.
# 'golang install' would be used otherwise.
golang get m
! stderr .
cp golang.mod.orig golang.mod

-- golang.mod.orig --
module m

golang 1.17
-- main.golang --
package main

func main() {}
