# Confirm our build list.
cp golang.sum.buildlist-only golang.sum
golang list -m all
stdout '^example.com/ambiguous/a v1.0.0$'
stdout '^example.com/ambiguous/a/b v0.0.0-empty$'

# If two modules could provide a package, but only one does,
# 'golang mod tidy' should retain sums for both zips.
golang mod tidy
grep '^example.com/ambiguous/a v1.0.0 h1:' golang.sum
grep '^example.com/ambiguous/a/b v0.0.0-empty h1:' golang.sum

# 'golang mod download' should also add sums.
cp golang.sum.buildlist-only golang.sum
golang mod download example.com/ambiguous/a
grep '^example.com/ambiguous/a v1.0.0 h1:' golang.sum
! grep '^example.com/ambiguous/a/b v0.0.0-empty h1:' golang.sum
golang mod download example.com/ambiguous/a/b
grep '^example.com/ambiguous/a/b v0.0.0-empty h1:' golang.sum

# If two modules could provide a package, and we're missing a sum for one,
# we should see a missing sum error, even if we have a sum for a module that
# provides the package.
cp golang.sum.a-only golang.sum
! golang list example.com/ambiguous/a/b
stderr '^missing golang.sum entry needed to verify package example.com/ambiguous/a/b is provided by exactly one module; to add:\n\tgolang mod download example.com/ambiguous/a/b$'
! golang list -deps .
stderr '^use.golang:3:8: missing golang.sum entry needed to verify package example.com/ambiguous/a/b \(imported by m\) is provided by exactly one module; to add:\n\tgolang get m$'

cp golang.sum.b-only golang.sum
! golang list example.com/ambiguous/a/b
stderr '^missing golang.sum entry for module providing package example.com/ambiguous/a/b; to add:\n\tgolang mod download example.com/ambiguous/a$'
! golang list -deps .
stderr '^use.golang:3:8: missing golang.sum entry for module providing package example.com/ambiguous/a/b \(imported by m\); to add:\n\tgolang get m$'

cp golang.sum.buildlist-only golang.sum
! golang list example.com/ambiguous/a/b
stderr '^missing golang.sum entry for module providing package example.com/ambiguous/a/b; to add:\n\tgolang mod download example.com/ambiguous/a example.com/ambiguous/a/b$'
! golang list -deps .
stderr '^use.golang:3:8: missing golang.sum entry for module providing package example.com/ambiguous/a/b \(imported by m\); to add:\n\tgolang get m$'

-- golang.mod --
module m

golang 1.15

require example.com/ambiguous/a v1.0.0
-- golang.sum.buildlist-only --
example.com/ambiguous/a v1.0.0/golang.mod h1:TrBl/3xTPFJ2gmMIYz53h2gkNtg0dokszEMuyS1QEb0=
example.com/ambiguous/a/b v0.0.0-empty/golang.mod h1:MajJq5jPEBnnXP+NTWIeXX7kwaPS1sbVEJdooTmsePQ=
-- golang.sum.a-only --
example.com/ambiguous/a v1.0.0 h1:pGZhTXy6+titE2rNfwHwJykSjXDR4plO52PfZrBM0T8=
example.com/ambiguous/a v1.0.0/golang.mod h1:TrBl/3xTPFJ2gmMIYz53h2gkNtg0dokszEMuyS1QEb0=
example.com/ambiguous/a/b v0.0.0-empty/golang.mod h1:MajJq5jPEBnnXP+NTWIeXX7kwaPS1sbVEJdooTmsePQ=
-- golang.sum.b-only --
example.com/ambiguous/a v1.0.0/golang.mod h1:TrBl/3xTPFJ2gmMIYz53h2gkNtg0dokszEMuyS1QEb0=
example.com/ambiguous/a/b v0.0.0-empty h1:xS29ReXXuhjT7jc79mo91h/PevaZ2oS9PciF1DucXtg=
example.com/ambiguous/a/b v0.0.0-empty/golang.mod h1:MajJq5jPEBnnXP+NTWIeXX7kwaPS1sbVEJdooTmsePQ=
-- use.golang --
package use

import _ "example.com/ambiguous/a/b"
