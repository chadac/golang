# Tests that the generated test main file has a generated code comment.
# This is needed by analyzers that access source files through 'golang list'.
# Verifies golanglang.org/issue/31971.
# TODO(jayconrod): This test is brittle. We should write _testmain.golang as
# a build action instead of with an ad-hoc WriteFile call
# in internal/test/test.golang. Then we could just grep 'golang get -n'.
golang test x_test.golang

-- x_test.golang --
package x

import (
	"os"
	"path/filepath"
	"regexp"
	"testing"
)

func Test(t *testing.T) {
	exePath, err := os.Executable()
	if err != nil {
		t.Fatal(err)
	}
	testmainPath := filepath.Join(filepath.Dir(exePath), "_testmain.golang")
	source, err := os.ReadFile(testmainPath)
	if err != nil {
		t.Fatal(err)
	}
	if matched, err := regexp.Match(`(?m)^// Code generated .* DO NOT EDIT\.$`, source); err != nil {
		t.Fatal(err)
	} else if !matched {
		t.Error("_testmain.golang does not have generated code comment")
	}
}
