# Populate golang.sum.
golang get

# 'golang list -m -retracted' should load retractions, even if the version
# containing retractions has a different module path.
golang list -m -retracted -f '{{with .Retracted}}retracted{{end}}' example.com/retract/rename

# 'golang list -m -u' should load retractions, too.
golang list -m -u -f '{{with .Retracted}}retracted{{end}}' example.com/retract/rename

# 'golang get' should warn about the retracted version.
golang get
stderr '^golang: warning: example.com/retract/rename@v1.0.0-bad: retracted by module author: bad$'

# We can't upgrade, since this latest version has a different module path.
! golang get example.com/retract/rename
stderr 'module declares its path as: example.com/retract/newname'

-- golang.mod --
module example.com/use

golang 1.16

require example.com/retract/rename v1.0.0-bad
-- use.golang --
package use

import _ "example.com/retract/rename"
