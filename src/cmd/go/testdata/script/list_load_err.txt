# golang list -e -deps should list imports from any file it can read, even if
# other files in the same package cause golang/build.Import to return an error.
# Verifies golanglang.org/issue/38568

golang list -e -deps ./scan
stdout m/want

golang list -e -deps ./multi
stdout m/want

golang list -e -deps ./constraint
stdout m/want

[cgolang] golang list -e -test -deps ./cgolangtest
[cgolang] stdout m/want

[cgolang] golang list -e -deps ./cgolangflag
[cgolang] stdout m/want


# golang list -e should include files with errors in GoFiles, TestGoFiles, and
# other lists, assuming they match constraints.
# Verifies golanglang.org/issue/39986
golang list -e -f '{{range .GoFiles}}{{.}},{{end}}' ./scan
stdout '^golangod.golang,scan.golang,$'

golang list -e -f '{{range .GoFiles}}{{.}},{{end}}' ./multi
stdout '^a.golang,b.golang,$'

golang list -e -f '{{range .GoFiles}}{{.}},{{end}}' ./constraint
stdout '^golangod.golang,$'
golang list -e -f '{{range .IgnoredGoFiles}}{{.}},{{end}}' ./constraint
stdout '^constraint.golang,$'

[cgolang] golang list -e -f '{{range .XTestGoFiles}}{{.}},{{end}}' ./cgolangtest
[cgolang] stdout '^cgolang_test.golang,$'

[cgolang] golang list -e -f '{{range .GoFiles}}{{.}},{{end}}' ./cgolangflag
[cgolang] stdout '^cgolangflag.golang,$'

-- golang.mod --
module m

golang 1.14

-- want/want.golang --
package want

-- scan/scan.golang --
// scan error
ʕ◔ϖ◔ʔ

-- scan/golangod.golang --
package scan

import _ "m/want"

-- multi/a.golang --
package a

-- multi/b.golang --
package b

import _ "m/want"

-- constraint/constraint.golang --
// +build !!nope

package constraint

-- constraint/golangod.golang --
package constraint

import _ "m/want"

-- cgolangtest/cgolang_test.golang --
package cgolang_test

// cgolang is not allowed in tests.
// See golanglang.org/issue/18647

import "C"
import (
	"testing"
	_ "m/want"
)

func Test(t *testing.T) {}

-- cgolangflag/cgolangflag.golang --
package cgolangflag

// #cgolang ʕ◔ϖ◔ʔ:

import _ "m/want"
