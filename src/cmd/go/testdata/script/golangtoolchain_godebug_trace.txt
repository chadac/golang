# Test the GODEBUG=toolchaintrace behavior
# See https://golang.dev/issue/63939
env GODEBUG=toolchaintrace=1
env TESTGO_VERSION=golang1.21.0
env TESTGO_VERSION_SWITCH=switch
env GOTOOLCHAIN=auto

# Go line is newer than local golang version.
golang mod init m
golang mod edit -golang=1.21.1
golang version
stderr -count=1 'golang: upgrading toolchain to golang1.21.1 \(required by golang line in golang.mod; upgrade allowed by GOTOOLCHAIN=auto\)'
stderr -count=1 'golang: using golang1.21.1 toolchain from cache located at .*'
stdout 'golang version golang1.21.1'
rm golang.mod

# Toolchain line is newer than golang line.
golang mod init m
golang mod edit -golang=1.21.1 -toolchain=golang1.21.2
golang version
stderr -count=1 'golang: upgrading toolchain to golang1.21.2 \(required by toolchain line in golang.mod; upgrade allowed by GOTOOLCHAIN=auto\)'
stderr -count=1 'golang: using golang1.21.2 toolchain from cache located at .*'
stdout 'golang version golang1.21.2'
rm golang.mod

# Go line is newer than local golang version and toolchain line.
golang mod init m
golang mod edit -golang=1.22 -toolchain=golang1.21.2
golang version
stderr -count=1 'golang: upgrading toolchain to golang1.21.2 \(required by toolchain line in golang.mod; upgrade allowed by GOTOOLCHAIN=auto\)'
stderr -count=1 'golang: upgrading toolchain to golang1.22.0 \(required by golang line in golang.mod; upgrade allowed by GOTOOLCHAIN=auto\)'
stderr -count=1 'golang: using golang1.22.0 toolchain from cache located at .*'
stdout 'golang version golang1.22.0'
rm golang.mod

# No switch.
golang mod init m
golang mod edit -golang=1.21.0 -toolchain=golang1.21.0
golang version
stderr -count=1 'golang: using local toolchain golang1.21.0'
! stderr 'golang: upgrading toolchain'
stdout 'golang version golang1.21.0'
rm golang.mod

# GOTOOLCHAIN+auto is older than golang line and toolchain line.
golang mod init m
golang mod edit -golang=1.22 -toolchain=golang1.21.2
env GOTOOLCHAIN=golang1.21.0+auto
golang version
stderr -count=1 'golang: default toolchain set to golang1.21.0 from GOTOOLCHAIN=golang1.21.0\+auto'
stderr -count=1 'golang: upgrading toolchain to golang1.21.2 \(required by toolchain line in golang.mod; upgrade allowed by GOTOOLCHAIN=<name>\+auto\)'
stderr -count=1 'golang: upgrading toolchain to golang1.22.0 \(required by golang line in golang.mod; upgrade allowed by GOTOOLCHAIN=<name>\+auto\)'
stderr -count=1 'golang: using golang1.22.0 toolchain from cache located at .*'
stdout 'golang version golang1.22.0'
rm golang.mod

# GOTOOLCHAIN is older than golang line and toolchain line.
golang mod init m
golang mod edit -golang=1.22 -toolchain=golang1.21.2
env GOTOOLCHAIN=golang1.21.1
golang version
stderr -count=1 'golang: default toolchain set to golang1.21.1 from GOTOOLCHAIN=golang1.21.1'
stderr -count=1 'golang: using golang1.21.1 toolchain from cache located at .*'
! stderr 'golang: upgrading toolchain'
stdout 'golang version golang1.21.1'
rm golang.mod
env GOTOOLCHAIN=auto

# GOTOOLCHAIN+auto is newer than golang line and toolchain line.
golang mod init m
golang mod edit -golang=1.21.1 -toolchain=golang1.21.2
env GOTOOLCHAIN=golang1.22.0+auto
golang version
stderr -count=1 'golang: default toolchain set to golang1.22.0 from GOTOOLCHAIN=golang1.22.0\+auto'
stderr -count=1 'golang: using golang1.22.0 toolchain from cache located at .*'
stdout 'golang version golang1.22.0'
rm golang.mod

# GOTOOLCHAIN=local
env GOTOOLCHAIN=local
golang mod init m
golang mod edit -golang=1.21.1 -toolchain=golang1.21.2
golang version
stderr -count=1 'golang: default toolchain set to golang1.21.0 from GOTOOLCHAIN=local'
stderr -count=1 'golang: using local toolchain golang1.21.0'
stdout 'golang version golang1.21.0'
rm golang.mod

[short] stop 'requires build'
# If toolchain found in PATH, ensure we print that.
env GOTOOLCHAIN=auto
env TESTGO_VERSION_SWITCH=
mkdir $WORK/bin
golang build -o $WORK/bin/golang1.22.0$GOEXE ./fake/fakegolang.golang  # adds .exe extension implicitly on Windows
[!GOOS:plan9] env PATH=$WORK/bin
[GOOS:plan9] env path=$WORK/bin
golang mod init m
golang mod edit -golang=1.22.0
! golang version
stderr -count=1 'golang: upgrading toolchain to golang1.22.0 \(required by golang line in golang.mod; upgrade allowed by GOTOOLCHAIN=auto\)'
stderr -count=1 'golang: using golang1.22.0 toolchain located in system PATH \('$WORK'[/\\]bin[/\\]golang1.22.0'$GOEXE'\)'
stderr 'running golang1.22.0 from PATH'
rm golang.mod


-- fake/fakegolang.golang --
package main

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

func main() {
	exe, _ := os.Executable()
	name := filepath.Base(exe)
	name = strings.TrimSuffix(name, ".exe")
	fmt.Fprintf(os.Stderr, "running %s from PATH\n", name)
	os.Exit(1) // fail in case we are running this accidentally (like in "golang mod edit")
}
