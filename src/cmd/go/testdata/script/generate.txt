[short] skip

# Install an echo command because Windows doesn't have it.
env GOBIN=$WORK/tmp/bin
golang install echo.golang
env PATH=$GOBIN${:}$PATH

# Test golang generate handles a simple command
golang generate ./generate/simple.golang
stdout 'Success'

# Test golang generate handles a command alias
golang generate './generate/alias.golang'
stdout 'Now is the time for all golangod men'

# Test golang generate's variable substitution
golang generate './generate/substitution.golang'
stdout $GOARCH' substitution.golang:7 pabc xyzp/substitution.golang/123'

# Test golang generate's run and skip flags
golang generate -run y.s './generate/flag.golang'
stdout 'yes' # flag.golang should select yes
! stdout 'no' # flag.golang should not select no

golang generate -skip th..sand './generate/flag.golang'
stdout 'yes' # flag.golang should select yes
! stdout 'no' # flag.golang should not select no

golang generate -run . -skip th..sand './generate/flag.golang'
stdout 'yes' # flag.golang should select yes
! stdout 'no' # flag.golang should not select no

# Test golang generate provides the right "$GOPACKAGE" name in an x_test
golang generate './generate/env_test.golang'
stdout 'main_test'

# Test golang generate provides the right "$PWD"
golang generate './generate/env_pwd.golang'
stdout $WORK'[/\\]golangpath[/\\]src[/\\]generate'

-- echo.golang --
package main

import (
	"fmt"
	"os"
	"strings"
)

func main() {
	fmt.Println(strings.Join(os.Args[1:], " "))
	fmt.Println()
}
-- generate/simple.golang --
// Copyright 2014 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

// Simple test for golang generate.

// We include a build tag that golang generate should ignore.

// +build ignore

//golang:generate echo Success

package p
-- generate/alias.golang --
// Copyright 2014 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

// Test that golang generate handles command aliases.

//golang:generate -command run echo Now is the time
//golang:generate run for all golangod men

package p
-- generate/substitution.golang --
// Copyright 2014 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

// Test golang generate variable substitution.

//golang:generate echo $GOARCH $GOFILE:$GOLINE ${GOPACKAGE}abc xyz$GOPACKAGE/$GOFILE/123

package p
-- generate/flag.golang --
// Copyright 2015 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

// Test -run flag

//golang:generate echo oh yes my man
//golang:generate echo no, no, a thousand times no

package p
-- generate/env_test.golang --
package main_test

//golang:generate echo $GOPACKAGE
-- generate/env_pwd.golang --
package p

//golang:generate echo $PWD
