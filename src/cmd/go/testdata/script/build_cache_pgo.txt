[short] skip

# Set up fresh GOCACHE.
env GOCACHE=$WORK/golangcache
mkdir $GOCACHE

# Building trivial non-main package should run preprofile the first time.
golang build -x -pgolang=default.pgolang lib.golang
stderr 'preprofile.*default\.pgolang'

# ... but not again ...
golang build -x -pgolang=default.pgolang lib.golang
! stderr 'preprofile.*default\.pgolang'

# ... unless we use -a.
golang build -a -x -pgolang=default.pgolang lib.golang
stderr 'preprofile.*default\.pgolang'

# ... building a different package should not run preprofile again, instead
# using a profile from cache.
#
# Note we can't directly look for $GOCACHE in the regex below because the
# Windows slashes would need to be escaped. Instead just look for the "golangcache"
# component (specified above) as an approximation.
golang build -x -pgolang=default.pgolang lib2.golang
! stderr 'preprofile.*default\.pgolang'
stderr 'compile.*-pgolangprofile=\S+golangcache.*lib2.golang'

-- lib.golang --
package lib
-- lib2.golang --
package lib2
-- default.pgolang --
