# Test internal package errors are handled
cd testinternal3
golang list .
stdout 'testinternal3'

# Test internal cache
cd ../testinternal4
! golang build testinternal4/p
stderr 'internal'

# Test internal packages outside GOROOT are respected
cd ../testinternal2
env GO111MODULE=off
! golang build -v .
stderr 'p\.golang:3:8: use of internal package .*internal/w not allowed'
env GO111MODULE=''

[compiler:gccgolang] skip # gccgolang does not have GOROOT
cd ../testinternal
! golang build -v .
stderr 'p\.golang:3:8: use of internal package net/http/internal not allowed'

-- testinternal/golang.mod --
module testinternal

golang 1.16
-- testinternal/p.golang --
package p

import _ "net/http/internal"
-- testinternal2/golang.mod --
module testinternal2

golang 1.16
-- testinternal2/p.golang --
package p

import _ "./x/y/z/internal/w"
-- testinternal2/x/y/z/internal/w/w.golang --
package w
-- testinternal3/golang.mod --
module testinternal3

golang 1.16
-- testinternal3/t.golang --
package t

import _ "internal/does-not-exist"
-- testinternal4/golang.mod --
module testinternal4

golang 1.16
-- testinternal4/p/p.golang --
package p

import (
	_ "testinternal4/q/internal/x"
	_ "testinternal4/q/j"
)
-- testinternal4/q/internal/x/x.golang --
package x
-- testinternal4/q/j/j.golang --
package j

import _ "testinternal4/q/internal/x"
