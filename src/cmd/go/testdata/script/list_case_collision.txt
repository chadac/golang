# Tests golanglang.org/issue/4773

golang list -json example/a
stdout 'case-insensitive import collision'

! golang build example/a
stderr 'case-insensitive import collision'

# List files explicitly on command line, to encounter case-checking
# logic even on case-insensitive filesystems.
cp b/file.golang b/FILE.golang  # no-op on case-insensitive filesystems
! golang list b/file.golang b/FILE.golang
stderr 'case-insensitive file name collision'

mkdir a/Pkg  # no-op on case-insensitive filesystems
cp a/pkg/pkg.golang a/Pkg/pkg.golang  # no-op on case-insensitive filesystems
! golang list example/a/pkg example/a/Pkg

# Test that the path reported with an indirect import is correct.
cp b/file.golang b/FILE.golang
[case-sensitive] ! golang build example/c
[case-sensitive] stderr '^package example/c\n\timports example/b: case-insensitive file name collision: "FILE.golang" and "file.golang"$'

-- golang.mod --
module example

golang 1.16
-- a/a.golang --
package p
import (
	_ "example/a/pkg"
	_ "example/a/Pkg"
)
-- a/pkg/pkg.golang --
package pkg
-- b/file.golang --
package b
-- c/c.golang --
package c

import _ "example/b"
