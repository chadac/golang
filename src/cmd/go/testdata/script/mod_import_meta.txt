# The loader should not attempt to resolve imports of the "all", "std", and "cmd" meta-packages.

! golang list -deps ./importall
! stderr 'internal error'
stderr '^importall[/\\]x.golang:3:8: "all" is not an importable package; see ''golang help packages''$'

! golang list -deps ./importcmd
! stderr 'internal error'
stderr '^importcmd[/\\]x.golang:3:8: "cmd" is not an importable package; see ''golang help packages''$'

! golang list -deps ./importstd
! stderr 'internal error'
stderr '^importstd[/\\]x.golang:3:8: "std" is not an importable package; see ''golang help packages''$'


# Not even if such a path is theoretically provided by a (necessarily replaced) module.

golang mod edit -replace std@v0.1.0=./modstd
golang mod edit -require std@v0.1.0

! golang list -deps ./importstd
stderr '^importstd[/\\]x.golang:3:8: "std" is not an importable package; see ''golang help packages''$'


-- golang.mod --
module example.com
golang 1.16
-- importall/x.golang --
package importall

import _ "all"
-- importcmd/x.golang --
package importcmd

import _ "cmd"
-- importstd/x.golang --
package importstd

import _ "std"
-- modstd/golang.mod --
module std
golang 1.16
-- modstd/std.golang --
// Package std is an incredibly confusingly-named package.
package std
