# This is a regression test for issue #49632.
# The Go command should mention golang.work if the user
# tries to load a local package that's in a module
# that's not in golang.work and can't be resolved.

! golang list ./...
stderr 'pattern ./...: directory prefix . does not contain modules listed in golang.work or their selected dependencies'

! golang list ./a/c
stderr 'directory a[\\/]c is contained in a module that is not one of the workspace modules listed in golang.work. You can add the module to the workspace using:\n\tgolang work use a'

! golang install ./a/c
stderr 'directory a[\\/]c is contained in a module that is not one of the workspace modules listed in golang.work. You can add the module to the workspace using:\n\tgolang work use a'

cd a/c
! golang run .
stderr 'current directory is contained in a module that is not one of the workspace modules listed in golang.work. You can add the module to the workspace using:\n\tgolang work use \.\.'

cd ../..
! golang run .
stderr 'current directory outside modules listed in golang.work or their selected dependencies'

-- golang.work --
golang 1.18

use ./b
-- a/golang.mod --
module example.com/a

golang 1.18
-- a/a.golang --
package a
-- a/c/c.golang --
package main
-- b/golang.mod --
module example.com/b

golang 1.18
-- foo.golang --
package foo
