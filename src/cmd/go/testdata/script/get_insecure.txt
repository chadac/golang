[!net:insecure.golang-get-issue-15410.appspot.com] skip
[!git] skip

env PATH=$WORK/tmp/bin${:}$PATH
golang build -o $WORK/tmp/bin/ssh ssh.golang

# Modules: Set up
env GOPATH=$WORK/m/gp
mkdir $WORK/m
cp module_file $WORK/m/golang.mod
cd $WORK/m
env GO111MODULE=on
env GOPROXY=''

# Modules: Try golang get -d of HTTP-only repo (should fail).
! golang get -d insecure.golang-get-issue-15410.appspot.com/pkg/p

# Modules: Try again with GOINSECURE (should succeed).
env GOINSECURE=insecure.golang-get-issue-15410.appspot.com
env GONOSUMDB=insecure.golang-get-issue-15410.appspot.com
golang get -d insecure.golang-get-issue-15410.appspot.com/pkg/p

# Modules: Try updating without GOINSECURE (should fail).
env GOINSECURE=''
env GONOSUMDB=''
! golang get -d -u -f insecure.golang-get-issue-15410.appspot.com/pkg/p

golang list -m ...
stdout 'insecure.golang-get-issue'

-- ssh.golang --
// stub out uses of ssh by golang get
package main

import "os"

func main() {
	os.Exit(1)
}
-- module_file --
module m
