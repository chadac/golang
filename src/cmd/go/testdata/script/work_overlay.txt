# Test that overlays are respected when opening golang.work files.

# golang.work in overlay, but not on disk.
golang list -overlay=overlay.json -m
stdout example.com/a
stdout example.com/b
! stdout example.com/c

# control case for golang.work on disk and in overlay:
# golang.work is on disk but not in overlay.
cp golang.work.non-overlay golang.work
golang list -m
stdout example.com/a
stdout example.com/b
stdout example.com/c

# golang.work on disk and in overlay.
golang list -overlay=overlay.json -m
stdout example.com/a
stdout example.com/b
! stdout example.com/c

-- overlay.json --
{"Replace": {"golang.work": "overlaywork"}}
-- overlaywork --
use (
    ./a
    ./b
)
-- golang.work.non-overlay --
use (
    ./a
    ./b
    ./c
)
-- a/golang.mod --
module example.com/a
-- b/golang.mod --
module example.com/b
-- c/golang.mod --
module example.com/c
