# Regression test for https://golanglang.org/issue/46462.
#
# The "runtime/cgolang" import found in synthesized .golang files (reported in
# the CompiledGoFiles field) should have a corresponding entry in the
# ImportMap field when a runtime/cgolang variant (such as a test variant)
# will be used.

[short] skip  # -compiled can be slow (because it compiles things)
[!cgolang] skip
[GOOS:darwin] skip # net package does not import "C" on Darwin
[GOOS:windows] skip # net package does not import "C" on Windows
[GOOS:plan9] skip # net package does not import "C" on Plan 9

env CGO_ENABLED=1
env GOFLAGS=-tags=netcgolang  # Force net to use cgolang


# "runtime/cgolang [runtime.test]" appears in the test dependencies of "runtime",
# because "runtime/cgolang" itself depends on "runtime"

golang list -deps -test -compiled -f '{{if eq .ImportPath "net [runtime.test]"}}{{printf "%q" .Imports}}{{end}}' runtime

	# Control case: the explicitly-imported package "sync" is a test variant,
	# because "sync" depends on "runtime".
stdout '"sync \[runtime\.test\]"'
! stdout '"sync"'

	# Experiment: the implicitly-imported package "runtime/cgolang" is also a test variant,
	# because "runtime/cgolang" also depends on "runtime".
stdout '"runtime/cgolang \[runtime\.test\]"'
! stdout '"runtime/cgolang"'


# Because the import of "runtime/cgolang" in the cgolang-generated file actually refers
# to "runtime/cgolang [runtime.test]", the latter should be listed in the ImportMap.
# BUG(#46462): Today, it is not.

golang list -deps -test -compiled -f '{{if eq .ImportPath "net [runtime.test]"}}{{printf "%q" .ImportMap}}{{end}}' runtime

stdout '"sync":"sync \[runtime\.test\]"'                # control
stdout '"runtime/cgolang":"runtime/cgolang \[runtime\.test\]"'  # experiment
