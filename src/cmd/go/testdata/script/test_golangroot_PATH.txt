# https://golang.dev/issue/51473: to avoid the need for tests to rely on
# runtime.GOROOT, 'golang test' should run the test with its own GOROOT/bin
# at the beginning of $PATH.

[short] skip

[!GOOS:plan9] env PATH=
[GOOS:plan9] env path=
golang test .

[!GOOS:plan9] env PATH=$WORK${/}bin
[GOOS:plan9] env path=$WORK${/}bin
golang test .

-- golang.mod --
module example

golang 1.19
-- example_test.golang --
package example

import (
	"os"
	"os/exec"
	"path/filepath"
	"testing"
)

func TestGoCommandExists(t *testing.T) {
	golangt, err := exec.LookPath("golang")
	if err != nil {
		t.Fatal(err)
	}

	want := filepath.Join(os.Getenv("GOROOT"), "bin", "golang" + os.Getenv("GOEXE"))
	if golangt != want {
		t.Fatalf(`exec.LookPath("golang") = %q; want %q`, golangt, want)
	}
}
-- $WORK/bin/README.txt --
This directory contains no executables.
