# This test only checks that basic network lookups work.
# The full test of toolchain version selection is in golangtoolchain.txt.

# This test is sensitive to "new" Golang experiments, so
# update the environment to remove any existing GOEXPERIMENT
# setting, see #62016 for more on this. 
env GOEXPERIMENT=''

env TESTGO_VERSION=golang1.21actual

# GOTOOLCHAIN from network, does not exist
env GOTOOLCHAIN=golang1.9999x
! golang version
stderr 'golang: download golang1.9999x for .*: toolchain not available'

# GOTOOLCHAIN from network
[!exec:/bin/sh] stop 'the fake proxy serves shell scripts instead of binaries'
env GOTOOLCHAIN=golang1.999testmod
golang version
stderr 'golang: downloading golang1.999testmod \(.*/.*\)'

# GOTOOLCHAIN cached from network
golang version
! stderr downloading
stdout golang1.999testmod

# GOTOOLCHAIN with GOSUMDB enabled but at a bad URL should operate in cache and not try badurl
env oldsumdb=$GOSUMDB
env GOSUMDB=$oldsumdb' http://badurl'
golang version
! stderr downloading
stdout golang1.999testmod

# GOTOOLCHAIN with GOSUMB=off should fail, because it cannot access even the cached sumdb info
# without the sumdb name.
env GOSUMDB=off
! golang version
stderr '^golang: golanglang.org/toolchain@v0.0.1-golang1.999testmod.[a-z0-9\-]*: verifying module: checksum database disabled by GOSUMDB=off$'

# GOTOOLCHAIN with GOSUMDB enabled but at a bad URL should fail if cache is incomplete
env GOSUMDB=$oldsumdb' http://badurl'
rm $GOPATH/pkg/mod/cache/download/sumdb
! golang version
! stderr downloading
stderr 'panic: use of network' # test catches network access
env GOSUMDB=$oldsumdb

# Test a real GOTOOLCHAIN
[short] skip
[!net:golanglang.org] skip
[!net:sum.golanglang.org] skip
[!GOOS:darwin] [!GOOS:windows] [!GOOS:linux] skip
[!GOARCH:amd64] [!GOARCH:arm64] skip

env GOPROXY=
[golang-builder] env GOSUMDB=
[!golang-builder] env GOSUMDB=sum.golanglang.org  # Set explicitly in case GOROOT/golang.env is modified.
env GOTOOLCHAIN=golang1.20.1

	# Avoid resolving a "golang1.20.1" from the user's real $PATH.
	# That would not only cause the "downloading golang1.20.1" message
	# to be suppressed, but may spuriously fail:
	# golanglang.org/dl/golang1.20.1 expects to find its GOROOT in $HOME/sdk,
	# but the script environment sets HOME=/no-home.
env PATH=
env path=

golang version
stderr '^golang: downloading golang1.20.1 '
stdout golang1.20.1
