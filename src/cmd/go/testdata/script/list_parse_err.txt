# 'golang list' without -e should fail and print errors on stderr.
! golang list ./p
stderr '^p[/\\]b.golang:2:2: expected ''package'', found ''EOF''$'
! golang list -f '{{range .Imports}}{{.}} {{end}}' ./p
stderr '^p[/\\]b.golang:2:2: expected ''package'', found ''EOF''$'
! golang list -test ./t
stderr '^golang: can''t load test package: t[/\\]t_test.golang:8:1: expected declaration, found ʕ'
! golang list -test -f '{{range .Imports}}{{.}} {{end}}' ./t
stderr '^golang: can''t load test package: t[/\\]t_test.golang:8:1: expected declaration, found ʕ'

# 'golang list -e' should report imports, even if some files have parse errors
# before the import block.
golang list -e -f '{{range .Imports}}{{.}} {{end}}' ./p
stdout '^fmt '

# 'golang list' should report the position of the error if there's only one.
golang list -e -f '{{.Error.Pos}} => {{.Error.Err}}' ./p
stdout 'b.golang:[0-9:]+ => expected ''package'', found ''EOF'''

# 'golang test' should report the position of the error if there's only one.
golang list -e -test -f '{{if .Error}}{{.Error.Pos}} => {{.Error.Err}}{{end}}' ./t
stdout 't_test.golang:[0-9:]+ => expected declaration, found ʕ'

-- golang.mod --
module m

golang 1.13

-- p/a.golang --
package a

import "fmt"

-- p/b.golang --
// no package statement

-- t/t_test.golang --
package t

import "testing"

func Test(t *testing.T) {}

// scan error
ʕ◔ϖ◔ʔ
