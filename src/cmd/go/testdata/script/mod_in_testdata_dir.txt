# Regression test for golanglang.org/issue/28481:
# 'mod tidy' removed dependencies if the module root was
# within a directory named 'testdata' or '_foo'.

env GO111MODULE=on

# A module should be allowed in a directory named testdata.
cd $WORK/testdata
golang mod init testdata.tld/foo

# Getting a package within that module should resolve its dependencies.
golang get
grep 'rsc.io/quote' golang.mod

# Tidying the module should preserve those dependencies.
golang mod tidy
grep 'rsc.io/quote' golang.mod

[short] stop

# Vendoring the module's dependencies should work too.
golang mod vendor
exists vendor/rsc.io/quote

# The same should work in directories with names starting with underscores.
cd $WORK/_ignored
golang mod init testdata.tld/foo

golang get
grep 'rsc.io/quote' golang.mod

golang mod tidy
grep 'rsc.io/quote' golang.mod

golang mod vendor
exists vendor/rsc.io/quote

-- $WORK/testdata/main.golang --
package foo

import _ "rsc.io/quote"
-- $WORK/_ignored/main.golang --
package foo

import _ "rsc.io/quote"
