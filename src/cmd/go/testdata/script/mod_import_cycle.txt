env GO111MODULE=on

# 'golang list all' should fail with a reasonable error message
! golang list all
stderr '^package m\n\timports m/a from m.golang\n\timports m/b from a.golang\n\timports m/a from b.golang: import cycle not allowed'

# 'golang list -e' should not print to stderr, but should mark all three
# packages (m, m/a, and m/b) as Incomplete.
golang list -e -json all
! stderr .
stdout -count=3 '"Incomplete": true,'

-- golang.mod --
module m

require (
	m/a v0.0.0
	m/b v0.0.0
)

replace (
	m/a => ./a
	m/b => ./b
)
-- m.golang --
package m
import (
	_ "m/a"
	_ "m/b"
)
-- a/golang.mod --
module m/a
-- a/a.golang --
package a
import _ "m/b"
-- b/golang.mod --
module m/b
-- b/b.golang --
package b
import _ "m/a"
