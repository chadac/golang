# This test checks error messages for non-existent packages in module mode.
# Veries golanglang.org/issue/35414
env GO111MODULE=on
cd $WORK

golang list -e -f {{.Error}} .
stdout 'no Golang files in '$WORK

golang list -e -f {{.Error}} ./empty
stdout 'no Golang files in '$WORK${/}'empty'

golang list -e -f {{.Error}} ./exclude
stdout 'build constraints exclude all Golang files in '$WORK${/}'exclude'

golang list -e -f {{.Error}} ./missing
stdout 'stat '$WORK'[/\\]missing: directory not found'

# use 'golang build -n' because 'golang list' reports no error.
! golang build -n ./testonly
stderr 'example.com/m/testonly: no non-test Golang files in '$WORK${/}'testonly'

-- $WORK/golang.mod --
module example.com/m

golang 1.14

-- $WORK/empty/empty.txt --
-- $WORK/exclude/exclude.golang --
// +build exclude

package exclude
-- $WORK/testonly/testonly_test.golang --
package testonly_test
-- $WORK/excluded-stdout --
package ./excluded: cannot find package "." in:
	$WORK/excluded
