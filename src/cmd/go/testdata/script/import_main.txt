env GO111MODULE=off

# Test that you cannot import a main package.
# See golanglang.org/issue/4210 and golanglang.org/issue/17475.

[short] skip
cd $WORK

# Importing package main from that package main's test should work.
golang build x
golang test -c x

# Importing package main from another package should fail.
! golang build p1
stderr 'import "x" is a program, not an importable package'

# ... even in that package's test.
golang build p2
! golang test -c p2
stderr 'import "x" is a program, not an importable package'

# ... even if that package's test is an xtest.
golang build p3
! golang test p3
stderr 'import "x" is a program, not an importable package'

# ... even if that package is a package main
golang build p4
! golang test -c p4
stderr 'import "x" is a program, not an importable package'

# ... even if that package is a package main using an xtest.
golang build p5
! golang test -c p5
stderr 'import "x" is a program, not an importable package'

-- x/main.golang --
package main

var X int

func main() {}
-- x/main_test.golang --
package main_test

import (
	"testing"
	xmain "x"
)

var _ = xmain.X

func TestFoo(t *testing.T) {}
-- p1/p.golang --
package p1

import xmain "x"

var _ = xmain.X
-- p2/p.golang --
package p2
-- p2/p_test.golang --
package p2

import (
	"testing"
	xmain "x"
)

var _ = xmain.X

func TestFoo(t *testing.T) {}
-- p3/p.golang --
package p
-- p3/p_test.golang --
package p_test

import (
	"testing"
	xmain "x"
)

var _ = xmain.X

func TestFoo(t *testing.T) {}
-- p4/p.golang --
package main

func main() {}
-- p4/p_test.golang --
package main

import (
	"testing"
	xmain "x"
)

var _ = xmain.X

func TestFoo(t *testing.T) {}
-- p5/p.golang --
package main
func main() {}
-- p5/p_test.golang --
package main_test

import (
	"testing"
	xmain "x"
)

var _ = xmain.X

func TestFoo(t *testing.T) {}
