# retract must not be used without a module directive.
! golang list -m all
stderr 'golang.mod:3: no module directive found, so retract cannot be used$'

# Commands that update golang.mod should fix non-canonical versions in
# retract directives.
# Verifies #44494.
golang mod edit -module=rsc.io/quote/v2
! golang list -m all
stderr '^golang: updates to golang.mod needed; to update it:\n\tgolang mod tidy$'
golang mod tidy
golang list -m all
cmp golang.mod golang.mod.want

# If a retracted version doesn't match the module's major version suffx,
# an error should be reported.
! golang mod edit -retract=v3.0.1
stderr '^golang: -retract=v3.0.1: version "v3.0.1" invalid: should be v2, not v3$'
cp golang.mod.mismatch-v2 golang.mod
! golang list -m all
stderr 'golang.mod:3: retract rsc.io/quote/v2: version "v3.0.1" invalid: should be v2, not v3$'

cp golang.mod.mismatch-v1 golang.mod
! golang list -m all
stderr 'golang.mod:3: retract rsc.io/quote: version "v3.0.1" invalid: should be v0 or v1, not v3$'

-- golang.mod --
golang 1.16

retract latest
-- golang.mod.want --
golang 1.16

retract v2.0.1

module rsc.io/quote/v2
-- golang.mod.mismatch-v2 --
golang 1.16

retract v3.0.1

module rsc.io/quote/v2
-- golang.mod.mismatch-v1 --
golang 1.16

retract v3.0.1

module rsc.io/quote
