env GO111MODULE=on
[short] skip

# Populate golang.mod and golang.sum.
golang mod tidy

# initial conditions: using sampler v1.3.0, not listed in golang.mod.
golang list -deps
stdout rsc.io/sampler
! grep 'rsc.io/sampler v1.3.0' golang.mod

# update to v1.3.1, now indirect in golang.mod.
golang get rsc.io/sampler@v1.3.1
grep 'rsc.io/sampler v1.3.1 // indirect' golang.mod
cp golang.mod golang.mod.golangod

# vendoring can but should not need to make changes.
golang mod vendor
cmp golang.mod golang.mod.golangod

# golang list -mod=vendor (or golang build -mod=vendor) must not modify golang.mod.
# golanglang.org/issue/26704
golang list -mod=vendor
cmp golang.mod golang.mod.golangod

# With a clean (and empty) module cache, 'golang list -mod=vendor' should not download modules.
golang clean -modcache
env GOPROXY=off
! golang list ...
golang list -mod=vendor ...

# However, it should still list packages in the main module.
golang list -mod=vendor m/...
stdout m

-- golang.mod --
module m
golang 1.12
-- x.golang --
package x
import _ "rsc.io/quote"
