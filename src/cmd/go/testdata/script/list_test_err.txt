env GO111MODULE=off

# issue 28491: errors in test source files should not prevent
# "golang list -test" from returning useful information.

# golang list -e prints information for all test packages.
# The syntax error is shown in the package error field.
golang list -e -test -deps -f '{{.ImportPath}} {{.Error | printf "%q"}}' syntaxerr
stdout 'pkgdep <nil>'
stdout 'testdep_a <nil>'
stdout 'testdep_b <nil>'
stdout 'syntaxerr <nil>'
stdout 'syntaxerr \[syntaxerr.test\] <nil>'
stdout 'syntaxerr_test \[syntaxerr.test\] <nil>'
stdout 'syntaxerr\.test "[^"]*expected declaration'
! stderr 'expected declaration'

[short] stop

golang list -e -test -deps -f '{{.ImportPath}} {{.Error | printf "%q"}}' nameerr
stdout 'pkgdep <nil>'
stdout 'testdep_a <nil>'
stdout 'testdep_b <nil>'
stdout 'nameerr\.test "[^"]*wrong signature for TestBad'
! stderr 'wrong signature for TestBad'

# golang list prints a useful error for generic test functions
! golang list -test -deps genericerr
stderr 'wrong signature for TestGeneric, test functions cannot have type parameters'

golang list -e -test -deps -f '{{.ImportPath}} {{.Error | printf "%q"}}' cycleerr
stdout 'cycleerr <nil>'
stdout 'testdep_a <nil>'
stdout 'testdep_cycle \[cycleerr.test\] <nil>'
stdout 'cycleerr \[cycleerr.test\] "[^"]*import cycle not allowed in test'
! stderr 'import cycle not allowed in test'

-- syntaxerr/syntaxerr.golang --
package syntaxerr

import _ "pkgdep"

-- syntaxerr/syntaxerr_ie_test.golang --
package syntaxerr

!!!syntax error

-- syntaxerr/syntaxerr_xe_test.golang --
package syntaxerr_test

!!!syntax error

-- syntaxerr/syntaxerr_i_test.golang --
package syntaxerr

import _ "testdep_a"

-- syntaxerr/syntaxerr_x_test.golang --
package syntaxerr

import _ "testdep_b"

-- nameerr/nameerr.golang --
package nameerr

import _ "pkgdep"

-- nameerr/nameerr_i_test.golang --
package nameerr

import (
  _ "testdep_a"
  "testing"
)

func TestBad(t *testing.B) {}

-- nameerr/nameerr_x_test.golang --
package nameerr_test

import (
  _ "testdep_b"
  "testing"
)

func TestBad(t *testing.B) {}

-- genericerr/genericerr.golang --
package genericerr

-- genericerr/genericerr_test.golang --
package genericerr

import "testing"

func TestGeneric[T any](t *testing.T) {}

-- cycleerr/cycleerr_test.golang --
package cycleerr

import (
  _ "testdep_a"
  _ "testdep_cycle"
)

-- pkgdep/pkgdep.golang --
package pkgdep

-- testdep_a/testdep_a.golang --
package testdep_a

-- testdep_b/testdep_b.golang --
package testdep_b

-- testdep_cycle/testdep_cycle.golang --
package testdep_cycle

import _ "cycleerr"
