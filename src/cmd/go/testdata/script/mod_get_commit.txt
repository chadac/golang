env GO111MODULE=on
[short] skip

# @commit should resolve

# golanglang.org/x/text/language@commit should resolve.
# Because of -d, the compiler should not run.
golang get -x golanglang.org/x/text/language@14c0d48
! stderr 'compile|cp|gccgolang .*language\.a$'

# golang get should skip build with no Go files in root
golang get golanglang.org/x/text@14c0d48

# dropping -d, we should see a build.
[short] skip

env GOCACHE=$WORK/golangcache  # Looking for compile commands, so need a clean cache.

golang build -x golanglang.org/x/text/language
stderr 'compile|cp|gccgolang .*language\.a$'

golang list -f '{{.Stale}}' golanglang.org/x/text/language
stdout ^false

# install after build should not run the compiler again.
golang install -x golanglang.org/x/text/language
! stderr 'compile|cp|gccgolang .*language\.a$'

# we should see an error for unknown packages.
! golang get -x golanglang.org/x/text/foo@14c0d48
stderr '^golang: module golanglang.org/x/text@14c0d48 found \(v0.3.0\), but does not contain package golanglang.org/x/text/foo$'

# get pseudo-version should record that version
golang get rsc.io/quote@v0.0.0-20180214005840-23179ee8a569
grep 'rsc.io/quote v0.0.0-20180214005840-23179ee8a569' golang.mod

# but as commit should record as v1.5.1
golang get rsc.io/quote@23179ee8
grep 'rsc.io/quote v1.5.1' golang.mod

# golang mod edit -require does not interpret commits
golang mod edit -require rsc.io/quote@23179ee
grep 'rsc.io/quote 23179ee' golang.mod

# but other commands fix them
golang list -m -mod=mod all
grep 'rsc.io/quote v1.5.1' golang.mod

-- golang.mod --
module x
