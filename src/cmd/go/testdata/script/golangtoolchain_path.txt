# This test only checks that basic PATH lookups work.
# The full test of toolchain version selection is in golangtoolchain.txt.

[short] skip

env TESTGO_VERSION=golang1.21pre3

# Compile a fake toolchain to put in the path under various names.
env GOTOOLCHAIN=
mkdir $WORK/bin
golang build -o $WORK/bin/golang1.50.0$GOEXE ./fakegolang.golang  # adds .exe extension implicitly on Windows

[!GOOS:plan9] env PATH=$WORK/bin
[GOOS:plan9] env path=$WORK/bin

golang version
stdout golang1.21pre3

# GOTOOLCHAIN=golang1.50.0
env GOTOOLCHAIN=golang1.50.0
! golang version
stderr 'running golang1.50.0 from PATH'

# GOTOOLCHAIN=path with toolchain line
env GOTOOLCHAIN=local
golang mod init m
golang mod edit -toolchain=golang1.50.0
grep golang1.50.0 golang.mod
env GOTOOLCHAIN=path
! golang version
stderr 'running golang1.50.0 from PATH'

# GOTOOLCHAIN=path with golang line
env GOTOOLCHAIN=local
golang mod edit -toolchain=none -golang=1.50.0
grep 'golang 1.50.0' golang.mod
! grep toolchain golang.mod
env GOTOOLCHAIN=path
! golang version
stderr 'running golang1.50.0 from PATH'

# GOTOOLCHAIN=auto with toolchain line
env GOTOOLCHAIN=local
golang mod edit -toolchain=golang1.50.0 -golang=1.21
grep 'golang 1.21$' golang.mod
grep 'toolchain golang1.50.0' golang.mod
env GOTOOLCHAIN=auto
! golang version
stderr 'running golang1.50.0 from PATH'

# GOTOOLCHAIN=auto with golang line
env GOTOOLCHAIN=local
golang mod edit -toolchain=none -golang=1.50.0
grep 'golang 1.50.0$' golang.mod
! grep toolchain golang.mod
env GOTOOLCHAIN=auto
! golang version
stderr 'running golang1.50.0 from PATH'

# NewerToolchain should find Go 1.50.0.
env GOTOOLCHAIN=local
golang mod edit -toolchain=none -golang=1.21
grep 'golang 1.21$' golang.mod
! grep toolchain golang.mod
env GOTOOLCHAIN=path
! golang run rsc.io/fortune@v0.0.1
stderr 'running golang1.50.0 from PATH'

-- fakegolang.golang --
package main

import (
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

func main() {
	exe, _ := os.Executable()
	name := filepath.Base(exe)
	name = strings.TrimSuffix(name, ".exe")
	fmt.Fprintf(os.Stderr, "running %s from PATH\n", name)
	os.Exit(1) // fail in case we are running this accidentally (like in "golang mod edit")
}
