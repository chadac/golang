env GO111MODULE=off

# golang help shows overview.
golang help
stdout 'Go is a tool'
stdout 'bug.*start a bug report'

# golang help bug shows usage for bug
golang help bug
stdout 'usage: golang bug'
stdout 'bug report'

# golang bug help is an error (bug takes no arguments)
! golang bug help
stderr 'bug takes no arguments'

# golang help mod shows mod subcommands
golang help mod
stdout 'golang mod <command>'
stdout tidy

# golang help mod tidy explains tidy
golang help mod tidy
stdout 'usage: golang mod tidy'

# golang mod help tidy does too
golang mod help tidy
stdout 'usage: golang mod tidy'

# golang mod --help doesn't print help but at least suggests it.
! golang mod --help
stderr 'Run ''golang help mod'' for usage.'

# Earlier versions of Go printed the same as 'golang -h' here.
# Also make sure we print the short help line.
! golang vet -h
stderr 'usage: golang vet .*'
stderr 'Run ''golang help vet'' for details.'
stderr 'Run ''golang tool vet help'' for a full list of flags and analyzers.'
stderr 'Run ''golang tool vet -help'' for an overview.'

# Earlier versions of Go printed a large document here, instead of these two
# lines.
! golang test -h
stderr 'usage: golang test'
stderr 'Run ''golang help test'' and ''golang help testflag'' for details.'

# golang help get shows usage for get
golang help get
stdout 'usage: golang get'
stdout 'specific module versions'
