# Regression test for #60939: when 'golang tool dist' is missing,
# 'golang tool dist list' should inject its output.


# Set GOROOT to a directory that definitely does not include
# a compiled 'dist' tool. 'golang tool dist list' should still
# work, because 'cmd/golang' itself can impersonate this command.

mkdir $WORK/golangroot/bin
mkdir $WORK/golangroot/pkg/tool/${GOOS}_${GOARCH}
env GOROOT=$WORK/golangroot

! golang tool -n dist
stderr 'golang: no such tool "dist"'

golang tool dist list
stdout linux/amd64
cp stdout tool.txt

golang tool dist list -v
stdout linux/amd64
cp stdout tool-v.txt

golang tool dist list -broken
stdout $GOOS/$GOARCH
cp stdout tool-broken.txt

golang tool dist list -json
stdout '"GOOS": "linux",\n\s*"GOARCH": "amd64",\n'
cp stdout tool-json.txt

golang tool dist list -json -broken
stdout '"GOOS": "'$GOOS'",\n\s*"GOARCH": "'$GOARCH'",\n'
cp stdout tool-json-broken.txt

[short] stop


# Check against the real cmd/dist as the source of truth.

env GOROOT=$TESTGO_GOROOT
golang build -o dist.exe cmd/dist

exec ./dist.exe list
cmp stdout tool.txt

exec ./dist.exe list -v
cmp stdout tool-v.txt

exec ./dist.exe list -broken
cmp stdout tool-broken.txt

exec ./dist.exe list -json
cmp stdout tool-json.txt

exec ./dist.exe list -json -broken
cmp stdout tool-json-broken.txt
