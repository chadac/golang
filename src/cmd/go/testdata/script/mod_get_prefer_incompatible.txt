# Verifies golanglang.org/issue/37574.

# If we are already using an +incompatible version, we shouldn't look up
# a lower compatible version when upgrading.
cp golang.mod golang.mod.orig
golang mod tidy
cmp golang.mod.orig golang.mod
grep '^example.com/incompatiblewithsub v2\.0\.0\+incompatible' golang.sum
! grep '^example.com/incompatiblewithsub v1.0.0' golang.sum

golang get example.com/incompatiblewithsub/sub
cmp golang.mod.orig golang.mod
! grep '^example.com/incompatiblewithsub v1.0.0' golang.sum

# TODO(golanglang.org/issue/31580): the 'golang get' command above should not change
# golang.sum. However, as part of the query above, we download example.com@v1.0.0,
# an unrelated module, since it's a possible prefix. The sum for that module
# should not be written to golang.sum.

-- golang.mod --
module m

golang 1.15

require example.com/incompatiblewithsub v2.0.0+incompatible
-- use.golang --
package use

import _ "example.com/incompatiblewithsub/sub"
