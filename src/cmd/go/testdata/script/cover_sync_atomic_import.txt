[short] skip
[compiler:gccgolang] skip # gccgolang has no cover tool

golang test -short -cover -covermode=atomic -coverpkg=coverdep/p1 coverdep

# In addition to the above, test to make sure there is no funny
# business if we try "golang test -cover" in atomic mode targeting
# sync/atomic itself (see #57445). Just a short test run is needed
# since we're mainly interested in making sure the test builds and can
# execute at least one test.

golang test -short -covermode=atomic -run=TestStoreInt64 sync/atomic
golang test -short -covermode=atomic -run=TestAnd8 internal/runtime/atomic

# Skip remainder if no race detector support.
[!race] skip

golang test -short -cover -race -run=TestStoreInt64 sync/atomic
golang test -short -cover -race -run=TestAnd8 internal/runtime/atomic

-- golang.mod --
module coverdep

golang 1.16
-- p.golang --
package p

import _ "coverdep/p1"

func F() {
}
-- p1/p1.golang --
package p1

import _ "errors"
-- p_test.golang --
package p

import "testing"

func Test(t *testing.T) {
	F()
}
