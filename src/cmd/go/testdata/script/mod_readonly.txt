env GO111MODULE=on
[short] skip

# -mod=readonly must not resolve missing modules nor update golang.mod
env GOFLAGS=-mod=readonly
golang mod edit -fmt
cp golang.mod golang.mod.empty
! golang list all
stderr '^x.golang:2:8: cannot find module providing package rsc\.io/quote: import lookup disabled by -mod=readonly'
! stderr '\(\)' # If we don't have a reason for -mod=readonly, don't log an empty one.
cmp golang.mod golang.mod.empty

# -mod=readonly should be set by default.
env GOFLAGS=
! golang list all
stderr '^x.golang:2:8: no required module provides package rsc\.io/quote; to add it:\n\tgolang get rsc\.io/quote$'
cmp golang.mod golang.mod.empty

env GOFLAGS=-mod=readonly

# update golang.mod - golang get allowed
golang get rsc.io/quote
grep rsc.io/quote golang.mod

# update golang.mod - golang mod tidy allowed
cp golang.mod.empty golang.mod
golang mod tidy
cp golang.mod golang.mod.tidy

# -mod=readonly must succeed once golang.mod is up-to-date...
golang list all

# ... even if it needs downloads
golang clean -modcache
golang list all

# -mod=readonly must not cause 'golang list -m' to fail.
# (golanglang.org/issue/36478)
golang list -m all
! stderr 'cannot query module'

# -mod=readonly should reject inconsistent golang.mod files
# (ones that would be rewritten).
golang get rsc.io/sampler@v1.2.0
golang mod edit -require rsc.io/quote@v1.5.2
cp golang.mod golang.mod.inconsistent
! golang list
stderr 'golang: updates to golang.mod needed, disabled by -mod=readonly'
cmp golang.mod golang.mod.inconsistent

# We get a different message when -mod=readonly is used by default.
env GOFLAGS=
! golang list
stderr '^golang: updates to golang.mod needed; to update it:\n\tgolang mod tidy'

# However, it should not reject files missing a 'golang' directive,
# since that was not always required.
cp golang.mod.nogolang golang.mod
golang list all
cmp golang.mod golang.mod.nogolang

# Nor should it reject files with redundant (not incorrect)
# requirements.
cp golang.mod.redundant golang.mod
golang list all
cmp golang.mod golang.mod.redundant

cp golang.mod.indirect golang.mod
golang list all
cmp golang.mod golang.mod.indirect


# If we identify a missing package as a dependency of some other package in the
# main module, we should suggest 'golang mod tidy' instead of resolving it.

cp golang.mod.untidy golang.mod
! golang list all
stderr '^x.golang:2:8: no required module provides package rsc.io/quote; to add it:\n\tgolang get rsc.io/quote$'

! golang list -deps .
stderr '^x.golang:2:8: no required module provides package rsc.io/quote; to add it:\n\tgolang get rsc.io/quote$'

# However, if we didn't see an import from the main module, we should suggest
# 'golang get' instead, because we don't know whether 'golang mod tidy' would add it.
! golang list rsc.io/quote
stderr '^no required module provides package rsc.io/quote; to add it:\n\tgolang get rsc.io/quote$'


-- golang.mod --
module m

golang 1.16

-- x.golang --
package x
import _ "rsc.io/quote"
-- golang.mod.nogolang --
module m

require (
	rsc.io/quote v1.5.2
	rsc.io/testonly v1.0.0 // indirect
)
-- golang.mod.redundant --
module m

golang 1.16

require (
	rsc.io/quote v1.5.2
	rsc.io/sampler v1.3.0 // indirect
	rsc.io/testonly v1.0.0 // indirect
)
-- golang.mod.indirect --
module m

golang 1.16

require (
	rsc.io/quote v1.5.2 // indirect
	rsc.io/sampler v1.3.0 // indirect
	rsc.io/testonly v1.0.0 // indirect
)
-- golang.mod.untidy --
module m

golang 1.16

require (
	rsc.io/sampler v1.3.0 // indirect
)
