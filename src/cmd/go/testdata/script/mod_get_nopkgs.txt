cd subdir

# 'golang get' on empty patterns that are necessarily local to the module
# should warn that the patterns are empty, exactly once.

golang get ./...
stderr -count=1 'matched no packages'

golang get ./...
stderr -count=1 'matched no packages'

# 'golang get' on patterns that could conceivably match nested modules
# should report a module resolution error.

golang get example.net/emptysubdir/... # control case

! golang get example.net/emptysubdir/subdir/...
! stderr 'matched no packages'
stderr '^golang: example\.net/emptysubdir/subdir/\.\.\.: module example\.net/emptysubdir/subdir: reading http://.*: 404 Not Found\n\tserver response: 404 page not found\n\z'

# It doesn't make sense to 'golang get' a path in the standard library,
# since the standard library necessarily can't have unresolved imports.
#
# TODO(#30241): Maybe that won't always be the case?
#
# For that case, we emit a "malformed module path" error message,
# which isn't ideal either.

! golang get builtin/...  # in GOROOT/src, but contains no packages
stderr '^golang: builtin/...: malformed module path "builtin": missing dot in first path element$'

-- golang.mod --
module example.net/emptysubdir

golang 1.16
-- emptysubdir.golang --
// Package emptysubdir has a subdirectory containing no packages.
package emptysubdir
-- subdir/README.txt --
This module intentionally does not contain any p
