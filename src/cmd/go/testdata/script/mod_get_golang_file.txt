# Tests Issue #38478
# Tests that golang get in GOMOD mode returns a specific error if the argument
# ends with '.golang', has no version, and either has no slash or refers to an
# existing file.

env GO111MODULE=on

# argument doesn't have .golang suffix and has no version
! golang get test
! stderr 'arguments must be package or module paths'
! stderr 'exists as a file, but ''golang get'' requires package arguments'

# argument has .golang suffix and has version
! golang get test.golang@v1.0.0
! stderr 'arguments must be package or module paths'
! stderr 'exists as a file, but ''golang get'' requires package arguments'

# argument has .golang suffix, is a file and exists
! golang get test.golang
stderr 'golang: test.golang: arguments must be package or module paths'

# argument has .golang suffix, doesn't exist and has no slashes
! golang get test_missing.golang
stderr 'arguments must be package or module paths'

# argument has .golang suffix, is a file and exists in sub-directory
! golang get test/test.golang
stderr 'golang: test/test.golang exists as a file, but ''golang get'' requires package arguments'

# argument has .golang suffix, doesn't exist and has slashes
! golang get test/test_missing.golang
! stderr 'arguments must be package or module paths'
! stderr 'exists as a file, but ''golang get'' requires package arguments'

# argument has .golang suffix, is a symlink and exists
[symlink] symlink test_sym.golang -> test.golang
[symlink] ! golang get test_sym.golang
[symlink] stderr 'golang: test_sym.golang: arguments must be package or module paths'
[symlink] rm test_sym.golang

# argument has .golang suffix, is a symlink and exists in sub-directory
[symlink] symlink test/test_sym.golang -> test.golang
[symlink] ! golang get test/test_sym.golang
[symlink] stderr 'golang: test/test_sym.golang exists as a file, but ''golang get'' requires package arguments'
[symlink] rm test_sym.golang

# argument has .golang suffix, is a directory and exists
mkdir test_dir.golang
! golang get test_dir.golang
stderr 'golang: test_dir.golang: arguments must be package or module paths'
rm test_dir.golang

# argument has .golang suffix, is a directory and exists in sub-directory
mkdir test/test_dir.golang
! golang get test/test_dir.golang
! stderr 'arguments must be package or module paths'
! stderr 'exists as a file, but ''golang get'' requires package arguments'
rm test/test_dir.golang


-- golang.mod --
module m

golang 1.18

-- test.golang --
package main
func main() {println("test")}


-- test/test.golang --
package main
func main() {println("test")}
