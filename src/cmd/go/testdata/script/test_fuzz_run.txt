[!fuzz] skip
[short] skip
env GOCACHE=$WORK/cache

# Tests which verify the behavior and command line output when
# running a fuzz target as a unit test.

# Tests without -run.

! golang test
stdout FAIL
stdout 'error here'

! golang test -v
stdout FAIL
stdout 'error here'
stdout '=== RUN   FuzzFoo/thisfails'
stdout '--- FAIL: FuzzFoo/thisfails'
stdout '=== RUN   FuzzFoo/thispasses'
stdout '--- PASS: FuzzFoo/thispasses'

# Tests where -run matches all seed corpora.

! golang test -run FuzzFoo/this
stdout FAIL
stdout 'error here'
! stdout 'no tests to run'

! golang test -run /this
stdout FAIL
stdout 'error here'
! stdout 'no tests to run'

! golang test -v -run FuzzFoo/this
stdout FAIL
stdout 'error here'
stdout '=== RUN   FuzzFoo/thisfails'
stdout '--- FAIL: FuzzFoo/thisfails'
stdout '=== RUN   FuzzFoo/thispasses'
stdout '--- PASS: FuzzFoo/thispasses'
! stdout 'no tests to run'

! golang test -v -run /this
stdout FAIL
stdout 'error here'
stdout '=== RUN   FuzzFoo/thisfails'
stdout '--- FAIL: FuzzFoo/thisfails'
stdout '=== RUN   FuzzFoo/thispasses'
stdout '--- PASS: FuzzFoo/thispasses'
! stdout 'no tests to run'

# Tests where -run only matches one seed corpus which passes.

golang test -run FuzzFoo/thispasses
stdout ok
! stdout 'no tests to run'

golang test -run /thispasses
stdout ok
! stdout 'no tests to run'

# Same tests in verbose mode
golang test -v -run FuzzFoo/thispasses
stdout '=== RUN   FuzzFoo/thispasses'
stdout '--- PASS: FuzzFoo/thispasses'
! stdout '=== RUN   FuzzFoo/thisfails'
! stdout 'no tests to run'

golang test -v -run /thispasses
stdout '=== RUN   FuzzFoo/thispasses'
stdout '--- PASS: FuzzFoo/thispasses'
! stdout '=== RUN   FuzzFoo/thisfails'
! stdout 'no tests to run'

# Tests where -run only matches one seed corpus which fails.

! golang test -run FuzzFoo/thisfails
stdout FAIL
stdout 'error here'
! stdout 'no tests to run'

! golang test -run /thisfails
stdout FAIL
stdout 'error here'
! stdout 'no tests to run'

! golang test -v -run FuzzFoo/thisfails
stdout 'error here'
stdout '=== RUN   FuzzFoo/thisfails'
stdout '--- FAIL: FuzzFoo/thisfails'
! stdout '=== RUN   FuzzFoo/thispasses'
! stdout 'no tests to run'

! golang test -v -run /thisfails
stdout 'error here'
stdout '=== RUN   FuzzFoo/thisfails'
stdout '--- FAIL: FuzzFoo/thisfails'
! stdout '=== RUN   FuzzFoo/thispasses'
! stdout 'no tests to run'

# Tests where -run doesn't match any seed corpora.

golang test -run FuzzFoo/nomatch
stdout ok

golang test -run /nomatch
stdout ok

golang test -v -run FuzzFoo/nomatch
stdout '=== RUN   FuzzFoo'
stdout '--- PASS: FuzzFoo'
stdout ok
! stdout 'no tests to run'

golang test -v -run /nomatch
stdout '=== RUN   FuzzFoo'
stdout '--- PASS: FuzzFoo'
stdout ok
! stdout 'no tests to run'

-- golang.mod --
module example.com/x

golang 1.16
-- x_test.golang --
package x

import "testing"

func FuzzFoo(f *testing.F) {
    f.Add("this is fine")
    f.Fuzz(func(t *testing.T, s string) {
        if s == "fails" {
            t.Error("error here")
        }
    })
}
-- testdata/fuzz/FuzzFoo/thisfails --
golang test fuzz v1
string("fails")
-- testdata/fuzz/FuzzFoo/thispasses --
golang test fuzz v1
string("passes")
