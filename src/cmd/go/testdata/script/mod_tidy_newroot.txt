# https://golanglang.org/issue/45952: 'golang mod tidy' in an eager module failed due
# to an erroneous check on root completeness.
#
# Per the issue report:
# > It may have to do with:
# >
# > package A imports package B in golang.mod, which imports package C in its own golang.mod
# > package A drops direct dependency on package B â€¦
#
# We infer from that that package C is still needed by some other indirect
# dependency, and must be at a higher version than what is required by that
# dependency (or else no new root would be needed). An additional package D
# in its own module satisfies that condition, reproducing the bug.

golang mod tidy
cmp golang.mod golang.mod.tidy

-- golang.mod --
module example.net/a

golang 1.16

require (
	example.net/b v0.1.0
	example.net/d v0.1.0
)

replace (
	example.net/b v0.1.0 => ./b
	example.net/c v0.1.0 => ./c
	example.net/c v0.2.0 => ./c
	example.net/d v0.1.0 => ./d
)
-- golang.mod.tidy --
module example.net/a

golang 1.16

require (
	example.net/c v0.2.0 // indirect
	example.net/d v0.1.0
)

replace (
	example.net/b v0.1.0 => ./b
	example.net/c v0.1.0 => ./c
	example.net/c v0.2.0 => ./c
	example.net/d v0.1.0 => ./d
)
-- a.golang --
package a

import _ "example.net/d"

-- b/golang.mod --
module example.net/b

golang 1.16

require example.net/c v0.2.0
-- b/b.golang --
package b

import _ "example.net/c"

-- c/golang.mod --
module example.net/c

golang 1.16
-- c/c.golang --
package c

-- d/golang.mod --
module example.net/d

golang 1.16

require example.net/c v0.1.0
-- d/d.golang --
package d

import _ "example.net/c"
