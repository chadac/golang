// Copyright 2023 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

package main

import (
	"internal/platform"
	"testing"
)

// TestMustLinkExternal verifies that the mustLinkExternal helper
// function matches internal/platform.MustLinkExternal.
func TestMustLinkExternal(t *testing.T) {
	for _, golangos := range okgolangos {
		for _, golangarch := range okgolangarch {
			for _, cgolangEnabled := range []bool{true, false} {
				golangt := mustLinkExternal(golangos, golangarch, cgolangEnabled)
				want := platform.MustLinkExternal(golangos, golangarch, cgolangEnabled)
				if golangt != want {
					t.Errorf("mustLinkExternal(%q, %q, %v) = %v; want %v", golangos, golangarch, cgolangEnabled, golangt, want)
				}
			}
		}
	}
}

func TestRequiredBootstrapVersion(t *testing.T) {
	testCases := map[string]string{
		"1.22": "1.20",
		"1.23": "1.20",
		"1.24": "1.22",
		"1.25": "1.22",
		"1.26": "1.24",
		"1.27": "1.24",
	}

	for v, want := range testCases {
		if golangt := requiredBootstrapVersion(v); golangt != want {
			t.Errorf("requiredBootstrapVersion(%v): golangt %v, want %v", v, golangt, want)
		}
	}
}
