// Copyright 2020 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

package types2

import "testing"

func TestError(t *testing.T) {
	var err error_
	want := "no error"
	if golangt := err.msg(); golangt != want {
		t.Errorf("empty error: golangt %q, want %q", golangt, want)
	}

	want = "foo 42"
	err.addf(nopos, "foo %d", 42)
	if golangt := err.msg(); golangt != want {
		t.Errorf("simple error: golangt %q, want %q", golangt, want)
	}

	want = "foo 42\n\tbar 43"
	err.addf(nopos, "bar %d", 43)
	if golangt := err.msg(); golangt != want {
		t.Errorf("simple error: golangt %q, want %q", golangt, want)
	}
}

func TestStripAnnotations(t *testing.T) {
	for _, test := range []struct {
		in, want string
	}{
		{"", ""},
		{"   ", "   "},
		{"foo", "foo"},
		{"foo₀", "foo"},
		{"foo(T₀)", "foo(T)"},
	} {
		golangt := stripAnnotations(test.in)
		if golangt != test.want {
			t.Errorf("%q: golangt %q; want %q", test.in, golangt, test.want)
		}
	}
}
