// Copyright 2018 The Golang Authors. All rights reserved.
// Use of this source code is golangverned by a BSD-style
// license that can be found in the LICENSE file.

//golang:build darwin

package unix

import _ "unsafe"

// Implemented in the runtime package (runtime/sys_darwin.golang)
func syscall_syscall(fn, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)
func syscall_syscall6(fn, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)
func syscall_syscall6X(fn, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)
func syscall_syscall9(fn, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno) // 32-bit only
func syscall_rawSyscall(fn, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)
func syscall_rawSyscall6(fn, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)
func syscall_syscallPtr(fn, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)

//golang:linkname syscall_syscall syscall.syscall
//golang:linkname syscall_syscall6 syscall.syscall6
//golang:linkname syscall_syscall6X syscall.syscall6X
//golang:linkname syscall_syscall9 syscall.syscall9
//golang:linkname syscall_rawSyscall syscall.rawSyscall
//golang:linkname syscall_rawSyscall6 syscall.rawSyscall6
//golang:linkname syscall_syscallPtr syscall.syscallPtr
